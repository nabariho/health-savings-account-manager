# Docker Compose configuration for HSA Manager
# Development environment with all required services

services:
  # Frontend Service - React SPA served by nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:

        - VITE_API_BASE_URL=http://localhost:8000/api/v1
    ports:
      - "3000:8080"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - hsa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Backend Service - FastAPI application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # Database connection
      - DATABASE_URL=postgresql://${DB_USER:-hsa_user}:${DB_PASSWORD}@database:5432/${DB_NAME:-hsa_db}
      
      # OpenAI API configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Redis for caching
      - REDIS_URL=redis://redis:6379/0
      
      # Application settings
      - ENVIRONMENT=development
      - DEBUG=true
      - APP_NAME=HSA Onboarding API
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - CORS_ORIGINS=["http://localhost:3000", "http://frontend:8080"]
      
      # Security
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      
      # File storage
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=10485760  # 10MB
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      # Development: mount source for hot reload (optional)
      # - ./backend:/workspace/backend:ro
      
      # Persistent storage for uploads and logs
      - backend_uploads:/workspace/backend/uploads
      - backend_logs:/workspace/backend/logs
      
      # Knowledge base data (read-only)
      - ./data:/workspace/backend/data:ro
    networks:
      - hsa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "&&", "curl", "-f", "http://localhost:8000/api/v1/hsa_assistant/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # PostgreSQL Database with vector extension support
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-hsa_db}
      - POSTGRES_USER=${DB_USER:-hsa_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      # Expose for development access (remove in production)
      - "5432:5432"
    networks:
      - hsa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-hsa_user} -d ${DB_NAME:-hsa_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.max=10000
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      # Expose for development access (remove in production)
      - "6379:6379"
    networks:
      - hsa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:7.8
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@hsa.local}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "8080:80"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - hsa-network
    profiles:
      # Only start with: docker-compose --profile dev up
      - dev
    restart: unless-stopped

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - hsa-network
    profiles:
      # Only start with: docker-compose --profile dev up
      - dev
    restart: unless-stopped

# Named volumes for persistent data
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  pgadmin_data:
    driver: local

# Custom network for service communication
networks:
  hsa-network:
    driver: bridge